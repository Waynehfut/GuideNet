# -*- coding: utf-8 -*-"""-------------------------------------------------   File Nameï¼š       context_utils.py   Description :   Author :          HAO   Create by :       PyCharm   Check status:     https://waynehfut.com-------------------------------------------------"""import torchimport torch.nn as nnimport torch.nn.functional as Fclass GuidedLoss(nn.Module):    """    Build a context related loss function, which mainly constraint the context flow by add a new penalty item.    The model of the PKI in the previous version can be used in the Cholec 80 dataset, while in the annotation of    MICCAI 2019, it reports a different result, which cannot    """    def __init__(self):        super(GuidedLoss, self).__init__()    def forward(self, last, current, predict_mat):        # TODO how to cal the guide loss        current_gt = predict_mat[last]        current_sf = F.softmax(current)        return F.cosine_similarity(current_sf, current_gt)def guided_filter(last_predict, inputs, adj_mat):    """    Filter guided the result with the adj_mat    """    filter_mat = []    for item in last_predict:        filter_mat.append(adj_mat[item])    filter_mat = torch.tensor(filter_mat)    filted_predict = torch.mul(filter_mat, F.softmax(inputs))    _score, fix_predict = torch.max(filted_predict, 1)    return fix_predict